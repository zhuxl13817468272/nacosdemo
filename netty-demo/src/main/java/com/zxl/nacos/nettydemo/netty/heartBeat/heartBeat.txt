Netty基础知识：
    一、chat编码解码器(chat);
    二、自定编码解码器(codec);
    三、拆包及粘包解决(splitPacket);
Netty应用
    四、服务端心跳检测(heartBeat);
    五、客户端断线重连(reconnect);

Netty心跳检测机制
    所谓心跳, 即在 TCP 长连接中, 客户端和服务器之间定期发送的一种特殊的数据包, 通知对方自己还在线, 以确保 TCP 连接的有效性.

    在 Netty 中, 实现心跳机制的关键是 IdleStateHandler, 看下它的构造器：
    public IdleStateHandler(int readerIdleTimeSeconds, int writerIdleTimeSeconds, int allIdleTimeSeconds) {
        // readerIdleTimeSeconds  读超时 即当在指定的时间间隔内没有从 Channel 读取到数据时, 会触发一个 READER_IDLE 的 IdleStateEvent 事件.
        // writerIdleTimeSeconds  写超时 即当在指定的时间间隔内没有数据写入到 Channel 时, 会触发一个 WRITER_IDLE 的IdleStateEvent 事件.
        // allIdleTimeSeconds  读/写超时 即当在指定的时间间隔内没有读或写操作时, 会触发一个 ALL_IDLE 的 IdleStateEvent 事件.
    }

    Netty心跳检测机制实现方式
        pipeline.addLast(new IdleStateHandler(3, 0, 0, TimeUnit.SECONDS)); // 从IdleStateHandler源码中的channelIdle方法可知，会透传调用ctx.fireUserEventTriggered(idleStateEvent)(调用channelPipe中的下一个handler处理UserEventTriggered方法)
        pipeline.addLast(new HeartBeatServerHandler()); //上个handler会调用该handler的userEventTriggered方法
