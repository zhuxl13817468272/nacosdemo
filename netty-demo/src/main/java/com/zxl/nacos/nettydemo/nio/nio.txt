非阻塞版本1.1 -- 体现了无锁串行化优势
    1. 不阻塞原因是因为有buffer缓冲区（在NIO中，所有数据都是用缓存区处理的。单线程通过channel从buffer读数据，也可以通过channel向buffer写数据） -- 线程自身读写不阻塞，线程间不阻塞
    2. 底层调用了linux内核函数；
 缺点：
     如果连接数太多的话，会有大量的无效遍历。假如有10000个连接，其中只有1000个连接有读写数据，而其他9000个连接并没有断开，每次轮询要遍历一万次，其中有十分之九的遍历都是无效的，这显然不是一个让人很满意的状态。

非阻塞版本1.2 -- 体现了多路复用，是netty源码的精髓所在
    1. 不阻塞原因是因为有buffer缓冲区（在NIO中，所有数据都是用缓存区处理的。单线程通过channel从buffer读数据，也可以通过channel向buffer写数据） -- 线程自身读写不阻塞，线程间不阻塞
    2. 特色是引入Selector多路复用器(通过jdk引入linux内核函数，由linux硬中断把有连接、读写操作的线程放入rdList用于遍历，除去了无效连接的遍历)

    NIO有三大核心组件：  Channel(通道)， Buffer(缓冲区)，Selector(多路复用器)
        1、channel 类似于流，每个 channel 对应一个 buffer缓冲区，buffer 底层就是个数组
        2、channel 会注册到 selector 上，由 selector 根据 channel 读写事件的发生将其交由某个空闲的线程处理
        3、NIO 的 Buffer 和 channel 都是既可以读也可以写

    缺点： 没有异步封装   -- 1. 这才引出了netty基于NIO异步非阻塞框架；2.AIO（NIO 2.0） 异步非阻塞，由于linux内核函数对异步支持不是太更力，netty尝试使用nio后最终放弃了。


BOI模型                                                               server
                              |-----------------------------------------------------------------------------------------
     --------                 |        read      ---------------                                       -------------    |
    |        | -http三次握手---|网卡--> accept--- | established   |      ---------------------->         |            |  |
    | client |                |        write     | socket buffer |             copy                     |   jvm堆    |  |
    |        | <---- http ----|网卡 <----------- | 内核缓冲区     |     <-----------------------         | 内存缓存区  |  |
    ---------                 |                  ----------------                                       -------------   |
                              |                    linux                 netty/tomcat(epoll)           webapp(web.xml)  |
                              -----------------------------------------------------------------------------------------
NOI模型                                                               server
                              -----------------------------------------------------------------------------------------------
                              |                                                                                          ----|
     --------                 |        read       ---------------            ----------------               -------------    |
    |        | -http三次握手---|网卡--> accept--- | established   |  -------->|               | ------------>|            |   |
    | client |                |        write     | socket buffer |    copy   | direct buffer |  copy or 引用 |   jvm堆    |   |
    |        | <---- http ----|网卡 <----------- | 内核缓冲区     | <-------- |   物理缓冲区   | <------------| 内存缓存区  |   |
    ---------                 |                  ----------------            ----------------               -------------    |
                              |                    linux                    netty/tomcat(epoll)             webapp(web.xml)  |
                              ------------------------------------------------------------------------------------------------
    注：零拷贝(直接内存的使用): jvm堆内存引入（不是拷贝）DirectBuffer数据，引用的对象中只有momeryAddress值没有数组数据