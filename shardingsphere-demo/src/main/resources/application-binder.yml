#绑定表  select u.user_id,u.username,d.uvalue ustatus from t_user u left join t_dict d on u.ustatus = d.ustatus
# t_user和t_dict 不绑定时，会产生很多错误的数据（笛卡尔积）。把t_user和t_dict绑定时，两者分片规则一致（t_user_1--t_dict_1或t_user_2--t_dict_2）。（不会出现t_user_1--t_dict_2,t_user_2--t_dict_1的垃圾数据）

spring:
  shardingsphere:
    datasource:
      names: m1
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/coursedb?useSSL=false&useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Hongkong
        username: root
        password: 123456
    sharding:
      tables:
        t_dict:
          actualDataNodes: m1.t_dict_$->{1..2}
          key-generator:
            column: dict_id
            type: SNOWFLAKE
          table-strategy:
            inline:
              sharding-column: ustatus
              algorithm-expression: t_dict_$->{ustatus.toInteger()%2+1}

        t_user:
          actualDataNodes: m1.t_user_$->{1..2}
          key-generator:
            column: user_id
            type: SNOWFLAKE
          table-strategy:
            inline:
              sharding-column: ustatus
              algorithm-expression: t_user_$->{ustatus.toInteger()%2+1}

      #绑定表示例
      binding-tables[0]: t_user,t_dict


    # 读写分离配置，对应 YamlMasterSlaveRuleConfiguration 配置类
#    masterslave:
#      name: ms  # 名字，任意，需要保证唯一
#      master-data-source-name: ds-master # 主库数据源
#      slave-data-source-names: ds-slave-1, ds-slave-2 # 从库数据源

    props:
      sql:
        show: true





#mybatis:
#  mapper-location: classpath:mybatis-config.xml
#  mapper-locations: classpath:mapper/*.xml
#  type-aliases-package: com.zxl.nacos.shardingspheredemo.entity
